// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/dadaxiaoxiao/go-pkg/customserver"
	"github.com/dadaxiaoxiao/tag/internal/grpc"
	"github.com/dadaxiaoxiao/tag/internal/repository/cache"
	"github.com/dadaxiaoxiao/tag/internal/repository/dao"
	"github.com/dadaxiaoxiao/tag/internal/service"
	"github.com/dadaxiaoxiao/tag/ioc"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitApp() *customserver.App {
	client := ioc.InitEtcdClient()
	db := ioc.InitDB()
	tagDAO := dao.NewGORMTagDAO(db)
	cmdable := ioc.InitRedis()
	tagCache := cache.NewRedisTagCache(cmdable)
	logger := ioc.InitLogger()
	tagRepository := ioc.InitRepository(tagDAO, tagCache, logger)
	saramaClient := ioc.InitKafka()
	producer := ioc.InitProducer(saramaClient)
	tagService := service.NewTagService(tagRepository, producer)
	tagServiceServer := grpc.NewTagServiceServer(tagService)
	server := ioc.InitGRPCServer(client, tagServiceServer, cmdable, logger)
	app := &customserver.App{
		GRPCServer: server,
	}
	return app
}

// wire.go:

var thirdProvider = wire.NewSet(ioc.InitEtcdClient, ioc.InitLogger, ioc.InitRedis, ioc.InitDB, ioc.InitKafka, ioc.InitProducer)
